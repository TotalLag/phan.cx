---
// Notifications.astro
const { class: className, data } = Astro.props;

// You might need to implement this logic in a client-side script
const isActive = false;

// Helper function to format date
const formatDate = (dateString) => {
  const date = new Date(dateString);
  return date.toLocaleString('default', { month: 'short', day: 'numeric' });
};
---

<div class={className}>
  <button id="notificationButton">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="w-6 h-6 text-gray-700 hover:text-blue-600"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"
      />
    </svg>
    <span
      class={`absolute top-1 right-0.5 block h-1 w-1 rounded-full ${
        isActive ? 'animate-ping ring-2 ring-red-400 bg-red-600' : ''
      }`}
    />
  </button>

  <div id="notificationMenu" class="hidden absolute z-50 py-2 mt-1 overflow-hidden overflow-y-auto origin-top-right bg-white border border-gray-200 rounded shadow-md -right-5 sm:right-0 w-80 sm:w-96 h-80">
    <ul class="absolute left-0 right-0 p-2 bg-white rounded-md">
      <li class="px-5 pb-2 mb-2 text-xs text-gray-400 uppercase border-b border-solid border-gray">Releases</li>

      {data && data.map((release) => (
        <li class="flex items-start py-2 rounded-lg cursor-pointer hover:bg-gray-50 github">
          <div class="flex flex-col text-xs min-w-[4rem]">
            <span class="flex justify-center pt-1">{formatDate(release.date)}</span>
            <span class="flex items-center">
              <svg
                aria-hidden="true"
                height="16"
                viewBox="0 0 16 16"
                version="1.1"
                width="16"
                data-view-component="true"
                class="octicon octicon-tag"
              >
                <path
                  fill-rule="evenodd"
                  d="M2.5 7.775V2.75a.25.25 0 01.25-.25h5.025a.25.25 0 01.177.073l6.25 6.25a.25.25 0 010 .354l-5.025 5.025a.25.25 0 01-.354 0l-6.25-6.25a.25.25 0 01-.073-.177zm-1.5 0V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 010 2.474l-5.026 5.026a1.75 1.75 0 01-2.474 0l-6.25-6.25A1.75 1.75 0 011 7.775zM6 5a1 1 0 100 2 1 1 0 000-2z"
                />
              </svg>
              <span class="p-2">{release.tag}</span>
            </span>
          </div>
          <div class="flex flex-col pl-2 border-l border-solid border-gray">
            <h3>{release.name}</h3>
            <div class="w-56 mt-1 text-sm text-gray-600 font-regular github sm:w-72">
              <p set:html={release.body.replace(/(\r\n|\\r)/gm, '')} />
            </div>
          </div>
        </li>
      ))}
    </ul>
  </div>
</div>

<script>
  const button = document.getElementById('notificationButton');
  const menu = document.getElementById('notificationMenu');

  if (button && menu) {
    button.addEventListener('click', () => {
      menu.classList.toggle('hidden');
    });

    document.addEventListener('click', (event) => {
      if (!menu.contains(event.target) && !button.contains(event.target)) {
        menu.classList.add('hidden');
      }
    });
  }
</script>

<style>
  /* Add your styles here */
</style>